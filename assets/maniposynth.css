:root {
  --body-margin: 10px;
  --toolbox-width: 150px;
  --padding: 4px;
}

body {
  margin: var(--body-margin);
  margin-top: 88px;
  padding: 0;
  width: calc(100% - 3*var(--body-margin) - var(--toolbox-width));
  font-size: 16px;
  font-family: Avenir Next, Avenir;
  color: #3a3a3a;
}

h1 {
  top: 0;
  left: 0;
  width: 100%;
  margin: 0;
  padding: var(--padding) 15px;
  position: fixed;
  border-bottom: solid 4px black;
  font-size: 44px;
  font-family: "Brush Script MT", cursive;
  background-color: rgba(255,255,255,0.98);
}

.box {
  box-sizing: border-box;
  /* background-color: white; */
}

.ret, .rets {
  border-top: 1px solid black;
}

.label, .constant {
  font-size: 15px;
}

.label, .constant, .callable {
  background-color: rgb(163, 255, 174);
  padding: var(--padding);
  min-width: 2em;
}

.label .expr {
  display: inline-block;
}

[draggable=true] {
  cursor: move;
}

.draggable-hovered {
  /* font-weight: bold; */
  background-color: rgba(200,200,200,0.5);
  /* text-decoration: underline; */
  color: #000;
  box-shadow: 2px 2px 5px rgba(0,0,0,0.3);
}

.current-drop-target {
  background-color: #ffd !important;
}

/* Toolbox */

#toolbox {
  box-sizing: border-box;
  border: 2px solid black;
  width: var(--toolbox-width);
  position: fixed;
  right: var(--body-margin);
  margin-top: 27px;
}

#toolbox > .box {
  border: 1px solid black;
  padding: var(--padding);
  margin: 3px;
}


/* Top-level bindings */

body > .binding {
  margin-bottom: 2em;
}

body > .binding > .label {
  background-color: transparent;
  padding: 3px 0px;
  font-weight: bold;
}

/* hide RHS of top-level binding */
body > .binding > .label > .expr {
  display: none;
}


/* Fun */

.fun {
  border: solid 1px black;
}

.fun > .ret > .fun {
  border: none;
}

.param > .box {
  display: table-cell;
}

.param > .label {
  border-right: 1px solid black;
}

.param > .values {
  padding: var(--padding);
}


/* Bindings_rets */

.bindings_rets > .bindings {
  min-height: 8em;
}

.bindings_rets > .box > .box,
/* .arg > .box, */
#toolbox > .box {
  border: 1px solid black;
  margin: 10px;
  display: inline-block;
  box-shadow: 2px 2px 5px rgba(0,0,0,0.3);
  vertical-align: top;
}

.selected {
  border: 1px solid blue !important;
  box-shadow: 4px 4px 10px rgba(0,100,200,1.0) !important;
}

.bindings_rets > .box > .box {
  /* display: inline-block; */
}


/* Apply */

/* Hide function name when just inside a binding. The function name is already displayed by the binding. */
.binding > .apply > .label {
  display: none;
}

.args > .arg {
  border-top: 1px solid black;
}

.args .args > .arg {
  border-top: none;
}

.apply .apply .apply > .args,
.apply .apply .apply > .ret {
  display: none;
}

.apply > .ret {  
  padding: var(--padding);
}

.arg > .box > .box {
  display: table-cell;
  border: none;
}

.arg > .box > .box + .box {
  border-left: 1px solid black;
}

/* Traced values */

.tracesnap {
  display: none;
}

.values {
  min-height: 1em;
}

.param .tracesnap {
  display: inline-block;
  min-width: 70px;
  opacity: 0.15;
}

.nosnaps {
  display: none;
  /* display: inline-block; */
  /* padding: var(--padding); */
  /* opacity: 0.15; */
}

/* [data-failure-in-frame-n].in-current-frame,*/ .nosnaps {
  opacity: 0.15;
}

.not-taken {
  opacity: 0.15;
}

.not-taken .not-taken {
  opacity: 1.0; /* don't fade out on nested things */
}

.tracesnap.in-current-frame {
  opacity: 1.0;
  display: inline-block;
}

.value {
  display: inline-block;
  font-family: 'Liga Menlo', 'Menlo', 'Monaco', monospace;
  padding: 0 3px;
}

[data-failure-in-frame-n]:not(.in-current-frame) {
  text-decoration: underline;
  color: blue;
  cursor: pointer;
}
