:root {
  --padding: 4px;
  --color: rgb(163, 255, 174);
  --color-light: rgb(215, 255, 220);
  --pat-color: rgb(226, 43, 144);
}

body {
  margin: 0;
  font-size: 16px;
  font-family: Avenir Next, Avenir, sans-serif;
}
input[type=text],
.textbox {
  padding: var(--padding);
  font-size: 16px;
  font-family: Avenir Next, Avenir, sans-serif;
  border: 1px solid gray;
  min-height: 1em;
  min-width: 2em;
  background-color: white;
}
.textbox[contenteditable=true] {
  /* Don't wrap to newline at edge of vbs */
  margin-right: -100em;
}
table {
  border-collapse: collapse;
}
td {
  padding: 0;
}
.hidden {
  display: none !important;
}


nav {
  top: 0;
  left: 0;
  position: fixed;
  width: 10000vw;
  height: 2.75rem;
  overflow: visible;
  border-bottom: solid 1px black;
  background-color: white;
  z-index: 3;
}
.top-level {
  margin-top: 2.75rem;
  min-height: calc(100vh - 2.75rem);
}

nav img {
  margin: 0 0.4rem 0 0.5rem;
  height: 3.8rem;
  margin-bottom: -1.3em;
  vertical-align: top;
}

.tool {
  vertical-align: top;
  line-height: 2.75rem;
  border: none;
  background: none;
  display: inline-block;
  padding: 0 1rem;
  margin: 0;
  cursor: default;
}

.tool > .tools {
  display: none;
  position: absolute;
  margin-left: -1rem;
  z-index: 100; /* don't ask me why this is needed for the hover not to fail */
}

.tool:hover {
  background: var(--color);
}

.tool:hover > .tools {
  display: block;
  background: lightgray;
}

.box {
  display: block;
  position: absolute;
  max-width: 100%;
  cursor: move;
  border: solid 10px transparent; /* Makes edges grabbable for relocating. */
  padding: 1rem;
  /* padding: 0.5em 5em 1em 1em; */
}
.box > * {
  cursor: auto;
}

.box > *,
.returns > .tv {
  background-color: white;
}

.box > .tv,
.returns > .tv {
  box-shadow: 0px 0px 5px rgba(0,0,0,0.15);
}

.box > .pat,
.pat_label,
.subvalue-name {
  font-family: 'Times New Roman', Times, serif;
  font-weight: bold;
}
.box > .pat:first-child {
  color: var(--pat-color);
}

.top-level > .box > .pat:first-child {
  font-size: 20px;
}

.top-level > .box > .tv {
  /* border: solid 1px black; */
  box-shadow: 0px 0px 10px rgba(0,0,0,0.15);
}

.is-rec {
  font-size: 12px;
  margin-top: 4px;
  float: right;
  opacity: 0.6;
  cursor: pointer;
}
.is-rec input[type=checkbox] {
  height: 8px;
  margin: 0;
}

.tv {
  min-height: 3rem;
  min-width: 2rem;
  /* display: inline-block; */
}
/* .exp_label .tv {
  min-height: 2em;
  min-width: 1em;
} */
.exp_label,
.pat_label,
.box > .pat:last-child {
  padding: var(--padding);
}
.pat_label,
.box > .pat:last-child,
.subvalue-name {
  background-color: white;
  color: var(--pat-color);
}
.fun-param > .pat_label {
  color: white;
  background-color: var(--pat-color);
}
.fun-param > td {
  border: solid 1px var(--pat-color);
}
.root-value-holder {
  padding: var(--padding);
  display: inline-block;
}
.exp_label .root-value-holder {
  padding: 0;
}
.exp_label .values {
  display: inline-block;
  position: relative;
  top: -0.7em;
  margin-left: 2px;
  background-color: var(--color-light);
  /* border: solid 1px var(--color); */
  padding: 1px;
  color: #555;
}
.fun-param > td > .values > .root-value-holder,
.fun-param > td > .values > .ellipses {
  margin-right: 1.2em;
}

table.subvalue-annotations {
  display: inline-block;
  vertical-align: middle;
  margin: -2rem 0;
}
table.subvalue-annotations td {
  height: 1rem;
  line-height: 1rem;
  text-align: right;
}
.subvalue-name,
.box > .pat:last-child {
  border: solid 1px lightgray;
}
.subvalue-name {
  display: inline-block;
  margin: 1px 0px -3px 1px;
  padding: 0 1px;
  font-size: 0.7rem;
  position: relative; /* This causes the vises to be displayed on top of the pink pat border. Go figure. */
}
.tv > .exp_label {
  background-color: var(--color);
  display: inline-block;
  margin-left: -0.9em;
  margin-top: -1.5em;
  margin-right: -1em; /* Make this too negative and the exp_label escapes its vb selection box */
}
/* .exp_label .exp_label {
  border: solid 1px white;
} */
.box > .pat:last-child {
  font-size: 0.9rem;
  position: absolute;
  padding: 2px;
  left: 0.1rem;
  bottom: -0.1rem;
}

.vbs {
  position: relative;
  /* min-height for .vbs in the the resizeVbHolders() javascript */
}

.exp_label,
.derived-vis-value .value {
  font-size: 0.8rem;
}
.exp_label .value {
  font-size: 0.65rem;
}
.value {
  display: inline-block;
  font-size: 1.5rem;
  cursor: pointer;
  font-weight: bold;
}
.derived-vis-value .value,
.exp_label .value {
  font-weight: normal;
}

.not-in-active-frame, .ellipses {
  display: none;
}
.pat .not-in-active-frame,
.pat .ellipses {
  display: inline-block;
  opacity: 0.14;
}

.draggable-hovered,
.highlighted {
  /* background-color: rgba(200,200,200,0.5); */
  box-shadow: 1px 1px 7px rgba(0,0,0,0.3);
}
/* For making it clearer which tiny subvalue in an exp_label is hovered. */
.draggable-hovered.value,
.highlighted {
  color: black;
  background-color: rgb(255, 255, 249);
}

.current-drop-target {
  background-color: rgb(255, 247, 232);
}

.selected {
  box-shadow: 0px 0px 5px rgb(0, 150, 255);
}


.derived-vis-values {
  display: block;
  height: 1rem;
  margin: 0;
  margin-top: -1rem;
  position: relative; /* This causes the vises to be displayed on top of the pink pat border. Go figure. */
}

.derived-vis-value {
  background-color: white;
  border: solid 1px gray;
  padding: 1px;
}

.failing {
  background-color: pink;
}

.passing {
  background-color: rgb(130, 255, 81);
}


.returns {
  padding: 1.5rem 1rem 0.5rem;
  border-top: solid 1px lightgray;
  display: flex;
  justify-content: space-evenly;
}


.autocomplete-options {
  min-width: 12rem;
  z-index: 1;
  border: solid 1px gray;
}
.autocomplete-options > * {
  display: block;
  background-color: rgba(255,255,255,0.95);
  padding: 0 var(--padding);
}
.textbox .value,
.autocomplete-options .value {
  font-size: 1rem;
}

#inspector {
  position: fixed;
  border: solid 1px black;
  background-color: white;
  z-index: 2;
}

#inspector #type-of-selected {
  padding: var(--padding);
  font-weight: bold;
}

#inspector input[type=text] {
  width: 100%;
  /* border: none; */
  border: inset 2px lightgray;
}

#inspector label {
  font-size: 0.7em;
}

#inspector input[type=checkbox] {
  cursor: pointer;
}

#inspector .exp-row {
  padding: var(--padding);
  border-top: 1px solid gray;
}

#inspector .exp-row button {
  float: right;
  /* margin:var(--padding); */
}
#inspector .exp-row label {
  float: right;
}


#synth-button {
  font-family: 'SignPainter', 'Brush Script MT', cursive;
  font-weight: bold;
  position: fixed;
  right: 10px;
  bottom: 10px;
  font-size: 50px;
  cursor: pointer;
  z-index: 1;
  border-radius: 15px;
  border: solid 4px gray;
}
#synth-button:hover {
  background-color: white;
  box-shadow: 0 0 5px yellow;
  text-shadow: 0 0 10px yellow;
}
.gratuitous-lambda {
  position: fixed;
  z-index: 10;
  font-size: 40px;
}